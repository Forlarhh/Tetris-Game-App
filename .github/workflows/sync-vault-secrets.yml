name: Vault Change Detection and Azure Pipeline Trigger

on:
  schedule:
    # Run every hour
    - cron: '0 * * * *'
  workflow_dispatch:

jobs:
  check_vault_and_trigger_pipeline:
    runs-on: ubuntu-latest

    steps:
    - name: Install Vault CLI
      run: |
        curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo apt-key add -
        sudo apt-add-repository "deb [arch=amd64] https://apt.releases.hashicorp.com $(lsb_release -cs) main"
        sudo apt-get update && sudo apt-get install vault -y

    - name: Start Vault in Dev Mode
      env:
        VAULT_DEV_ROOT_TOKEN_ID: ${{ secrets.VAULT_DEV_ROOT_TOKEN_ID }}  # Set your fixed root token here
      run: |
        vault server -dev &
        sleep 5  # Give Vault some time to start
        
    - name: Set VAULT_ADDR Environment Variable
      run: echo "VAULT_ADDR=http://127.0.0.1:8200" >> $GITHUB_ENV

    - name: Authenticate with Vault
      run: vault login token=${{ secrets.VAULT_DEV_ROOT_TOKEN_ID }}

    - name: Check Vault for Changes
      id: check_vault
      env:
        VAULT_ADDR: ${{ secrets.VAULT_ADDR }}
      run: |
        NEW_HASH=$(vault kv get -mount="secret" -format=json my-secret | jq -r '.data')
        if [ -f ".vault_data_hash" ]; then
          OLD_HASH=$(cat .vault_data_hash)
        else
          OLD_HASH=""
        fi
        if [ "$NEW_HASH" != "$OLD_HASH" ]; then
          echo "Vault data has changed."
          echo "$NEW_HASH" > .vault_data_hash
          echo "has_changed=true" >> $GITHUB_OUTPUT
        else
          echo "No changes in Vault data."
          echo "has_changed=false" >> $GITHUB_OUTPUT
        fi

    - name: Trigger Azure DevOps Pipeline
      if: steps.check_vault.outputs.has_changed == 'true'
      env:
        AZURE_DEVOPS_TOKEN: ${{ secrets.AZURE_DEVOPS_TOKEN }}
        AZURE_DEVOPS_ORG: ${{ secrets.AZURE_DEVOPS_ORG }}
        AZURE_DEVOPS_PROJECT: ${{ secrets.AZURE_DEVOPS_PROJECT }}
        AZURE_DEVOPS_PIPELINE_ID: ${{ secrets.AZURE_DEVOPS_PIPELINE_ID }}
      run: |
        echo "Triggering Azure DevOps pipeline..."
        curl -X POST "https://dev.azure.com/${AZURE_DEVOPS_ORG}/${AZURE_DEVOPS_PROJECT}/_apis/pipelines/${AZURE_DEVOPS_PIPELINE_ID}/runs?api-version=6.0-preview" \
          -H "Content-Type: application/json" \
          -H "Authorization: Bearer $AZURE_DEVOPS_TOKEN" \
          -d '{}'

    - name: Output Vault Logs on Failure
      if: failure()
      run: |
        echo "Vault CLI output:"
        # Include any relevant logs or outputs here
