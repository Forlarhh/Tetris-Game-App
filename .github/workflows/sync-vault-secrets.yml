name: Sync Vault Secrets to Azure DevOps

on:
  schedule:
    - cron: '*/5 * * * *'  # Run every 30 minutes
  workflow_dispatch:  # Allow manual triggering

jobs:
  check_secrets:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Install Dependencies
        run: |
          pip install hvac requests --upgrade

      - name: Check for Secret Changes
        id: check_secrets
        env:
          VAULT_ADDR: ${{ secrets.VAULT_ADDR }}
          VAULT_ROLE_ID: ${{ secrets.VAULT_ROLE_ID }}
          VAULT_SECRET_ID: ${{ secrets.VAULT_SECRET_ID }}
        run: |
          echo 'import os' > check_secrets.py
          echo 'import hvac' >> check_secrets.py
          echo 'import json' >> check_secrets.py
          echo 'vault_addr = os.environ["VAULT_ADDR"]' >> check_secrets.py
          echo 'role_id = os.environ["VAULT_ROLE_ID"]' >> check_secrets.py
          echo 'secret_id = os.environ["VAULT_SECRET_ID"]' >> check_secrets.py
          echo 'previous_secrets_file = "previous_secrets.json"' >> check_secrets.py
          echo 'client = hvac.Client(url=vault_addr)' >> check_secrets.py
          echo 'client.auth.approle.login(role_id=role_id, secret_id=secret_id)' >> check_secrets.py
          echo 'secrets = client.secrets.kv.v2.read_secret_version(path="secret/azure")["data"]["data"]' >> check_secrets.py
          echo 'if os.path.exists(previous_secrets_file):' >> check_secrets.py
          echo '    with open(previous_secrets_file, "r") as f:' >> check_secrets.py
          echo '        previous_secrets = json.load(f)' >> check_secrets.py
          echo 'else:' >> check_secrets.py
          echo '    previous_secrets = {}' >> check_secrets.py
          echo 'if secrets != previous_secrets:' >> check_secrets.py
          echo '    with open(previous_secrets_file, "w") as f:' >> check_secrets.py
          echo '        json.dump(secrets, f)' >> check_secrets.py
          echo '    print("Secrets have changed. Triggering Azure DevOps pipeline...")' >> check_secrets.py
          echo '    print("::set-output name=trigger::true")' >> check_secrets.py
          echo 'else:' >> check_secrets.py
          echo '    print("No changes detected in secrets.")' >> check_secrets.py
          echo '    print("::set-output name=trigger::false")' >> check_secrets.py
      
          python check_secrets.py


      - name: Trigger Azure DevOps Pipeline
        if: steps.check_secrets.outputs.trigger == 'true'
        run: |
          organization='Forlarhh'
          project='Vault'
          pipeline_id='4'
          pat_token=${{ secrets.AZURE_DEVOPS_PAT }}
          url="https://dev.azure.com/$organization/$project/_apis/pipelines/$pipeline_id/runs?api-version=6.0-preview.1"
          
          curl -X POST -H "Authorization: Basic $(echo ":$pat_token" | base64)" $url
          echo "Pipeline triggered successfully!"
