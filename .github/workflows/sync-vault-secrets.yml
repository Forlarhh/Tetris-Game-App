name: Sync Vault Secrets to Azure DevOps

on:
  schedule:
    - cron: '*/30 * * * *'  # Run every 30 minutes
  workflow_dispatch:  # Allow manual triggering

jobs:
  check_secrets:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Install Dependencies
        run: |
          pip install hvac requests

      - name: Check for Secret Changes
        id: check_secrets
        env:
          VAULT_ADDR: ${{ secrets.VAULT_ADDR }}
          VAULT_ROLE_ID: ${{ secrets.VAULT_ROLE_ID }}
          VAULT_SECRET_ID: ${{ secrets.VAULT_SECRET_ID }}
        run: |
          cat <<EOF > check_secrets.py
import os
import hvac
import json

vault_addr = os.getenv('VAULT_ADDR')
role_id = os.getenv('VAULT_ROLE_ID')
secret_id = os.getenv('VAULT_SECRET_ID')
previous_secrets_file = 'previous_secrets.json'

# Initialize Vault client
client = hvac.Client(url=vault_addr)
client.auth.approle.login(role_id=role_id, secret_id=secret_id)

# Fetch secrets
secrets = client.secrets.kv.v2.read_secret_version(path='secret/azure')['data']['data']

# Load previous secrets
if os.path.exists(previous_secrets_file):
    with open(previous_secrets_file, 'r') as f:
        previous_secrets = json.load(f)
else:
    previous_secrets = {}

# Compare secrets
if secrets != previous_secrets:
    # Save the new secrets
    with open(previous_secrets_file, 'w') as f:
        json.dump(secrets, f)
    print("Secrets have changed. Triggering Azure DevOps pipeline...")
    print("::set-output name=trigger::true")
else:
    print("No changes detected in secrets.")
    print("::set-output name=trigger::false")
EOF
          
          python check_secrets.py

      - name: Trigger Azure DevOps Pipeline
        if: steps.check_secrets.outputs.trigger == 'true'
        env:
          AZURE_DEVOPS_PAT: ${{ secrets.AZURE_DEVOPS_PAT }}
        run: |
          organization='<YourOrganization>'
          project='<YourProject>'
          pipeline_id='<YourPipelineID>'
          url="https://dev.azure.com/$organization/$project/_apis/pipelines/$pipeline_id/runs?api-version=6.0-preview.1"
          
          curl -X POST -H "Authorization: Basic $(echo ":$AZURE_DEVOPS_PAT" | base64)" $url
          echo "Pipeline triggered successfully!"
